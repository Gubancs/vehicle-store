volumes:
  database-data:

services:
  api1:
    image: vehiclestore:latest
    restart: always
    network_mode: host
    env_file:
      - ./docker/.env
    environment:
        - SERVER_PORT=8081
    expose:
      - 8081
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  api2:
    image: vehiclestore:latest
    restart: always
    network_mode: host
    env_file:
      - ./docker/.env
    environment:
      - SERVER_PORT=8082
    expose:
      - 8082
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'

  haproxy:
    image: haproxy:latest
    volumes:
      - ./docker/haproxy.conf:/usr/local/etc/haproxy/haproxy.cfg
    network_mode: host
    restart: always
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'

  database:
    image: postgres:latest
    restart: always
    env_file:
      - ./docker/.env
    command: 'postgres -c max_connections=50 -c shared_buffers=1GB -c effective_cache_size=2.5GB'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 1s
      retries: 10
      timeout: 5s
    network_mode: host
    volumes:
      - database-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '5GB'