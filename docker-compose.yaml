version: '3'

volumes:
  database-data:

networks:
  app-network:

services:
  api1:
    image: vehiclestore:latest
    hostname: api1
    restart: always
    ports:
      - "4001:4000"
    env_file:
      - ./docker/.env
    networks:
      - app-network
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  api2:
    image: vehiclestore:latest
    hostname: api2
    restart: always
    ports:
      - "4002:4000"
    env_file:
      - ./docker/.env
    networks:
      - app-network
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
    depends_on:
      - api1
      - api2
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'

  database:
    image: postgres:latest
    restart: always
    env_file:
      - ./docker/.env
    command: 'postgres -c max_connections=100 -c shared_buffers=1GB -c effective_cache_size=2.5GB'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 1s
      retries: 10
      timeout: 5s
    networks:
      - app-network
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '5GB'